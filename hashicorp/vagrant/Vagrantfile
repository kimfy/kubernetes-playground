# -*- mode: ruby -*-
# vi: set ft=ruby :
#
require 'ipaddr'

ENV['VAGRANT_NO_PARALLEL'] = 'yes'

domain = "hashicorp.lab.wwan.no"
consul_internal_domain = "consul.#{domain}"

server_node_count = 3
client_node_count = 2

ip_start_servers = "192.168.56.101"
ip_start_clients = "192.168.56.201"
server_ip_address = IPAddr.new ip_start_servers
client_ip_address = IPAddr.new ip_start_clients

vagrant_box_name = "generic/ubuntu2110"
vagrant_box_version = "3.6.14"
vagrant_box_check_update = false 

Vagrant.configure(2) do |config|
  # I am manually syncing this folder as Vagrant apparently fails to do it automatically.
  config.vm.synced_folder "./", "/vagrant"
  (1..server_node_count).each do |i|
    name = "server#{i}"
    fqdn = "#{name}.#{domain}"
    ip_address = server_ip_address.to_s; server_ip_address = server_ip_address.succ
    
    config.vm.define name do |node|
      node.vm.box               = vagrant_box_name
      node.vm.box_version       = vagrant_box_version
      node.vm.box_check_update  = vagrant_box_check_update
      node.vm.hostname          = fqdn
      node.vm.network "private_network", ip: ip_address

      node.vm.provider :virtualbox do |v|
        v.name = name
        v.memory  = 2048
        v.cpus    =  2
      end

      # Common configuration
      node.vm.provision :ansible_local do |ansible|
        ansible.playbook = "/vagrant/playbook.yml"
        ansible.verbose = true
        ansible.become = true
        ansible.host_vars = {
          "#{name}" => {
            "IP_ADDRESS" => ip_address
          }
        }
      end

      # Server configuration
      node.vm.provision :ansible_local do |ansible|
        ansible.playbook = "/vagrant/playbook-server.yml"
        ansible.verbose = true
        ansible.become = true
        ansible.host_vars = {
          "#{name}" => {
            "FQDN" => fqdn,
            "IP_ADDRESS" => ip_address,
            "IP_START_SERVERS" => ip_start_servers,
            "CONSUL_INTERNAL_DOMAIN" => consul_internal_domain,
            "BOOTSTRAP_EXPECT" => server_node_count
          }
        }
      end
    end
  end

  (1..client_node_count).each do |i|

    name = "client#{i}"
    fqdn = "#{name}.#{domain}"
    ip_address = client_ip_address.to_s; client_ip_address = client_ip_address.succ

    config.vm.define name do |node|
      node.vm.box               = vagrant_box_name
      node.vm.box_version       = vagrant_box_version
      node.vm.box_check_update  = vagrant_box_check_update
      node.vm.hostname          = fqdn
      node.vm.network "private_network", ip: ip_address

      node.vm.provider :virtualbox do |v|
        v.name = name
        v.memory  = 2048
        v.cpus    = 2
      end

      # Common configuration
      node.vm.provision :ansible do |ansible|
        ansible.playbook = "/vagrant/playbook.yml"
        ansible.verbose = true
        ansible.become = true
        ansible.host_vars = {
          "#{name}" => {
            "IP_ADDRESS" => ip_address
          }
        }
      end
      
      # Client configuration
      node.vm.provision :ansible do |ansible|
        ansible.playbook = "/vagrant/playbook-client.yml"
        ansible.verbose = true
        ansible.become = true
        ansible.host_vars = {
          "#{name}" => {
            "FQDN" => fqdn,
            "IP_ADDRESS" => ip_address,
            "IP_START_SERVERS" => ip_start_servers,
            "CONSUL_INTERNAL_DOMAIN" => consul_internal_domain
          }
        }
      end
    end
  end
end

